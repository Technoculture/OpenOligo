[tool.poetry]
name = "OpenOligo"
version = "0.1.8"
description = "An open-source platform for programmatically interacting with and managing Nucleic acid sequences synthesis processes."
license = "Apache-2.0"
authors = ["Satyam Tiwary <satyam@technoculture.io>"]
readme = "README.md"
keywords = ["DNA", "synthesis", "genetics", "open-source"]

[tool.poetry.scripts]
oligo-server = 'openoligo.scripts.server:main'
oligo-runner = 'openoligo.scripts.runner:main'
oligo = 'openoligo.scripts.orchestrator:main'

[tool.poetry.dependencies]
python = "^3.9"
rich = "^13.4.2"
python-dotenv = "^1.0.0"
tqdm = "^4.65.0"
fastapi = "^0.98.0"
pdocs = "^1.2.0"
uvicorn = "^0.22.0"
"RPi.GPIO" = { version = "^0.7.1", optional = true }
Adafruit_BBIO = { version = "^1.2.0", optional = true }
aerich = "^0.7.1"
types-tqdm = "^4.65.0.1"
tortoise-orm = "^0.18.1"
pydantic = "^1.8.2"
httpx = "^0.24.1"
sh = "^2.0.4"
anyio = "^3.7.0"
types-requests = "^2.31.0.1"
jupyter = "^1.0.0"
jupyterlab = "^4.0.2"

[tool.poetry.dev-dependencies]
pytest = "^7.3.2"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
flake8 = "^3.9.2"
black = "^23.3.0"
pylint = "^2.17.4"
mypy = "^1.3.0"
isort = "^5.12.0"
coverage-badge = "^1.1.0"
setuptools = "^68.0.0"
wheel = "^0.40.0"
twine = "^4.0.2"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
#requires = ["setuptools", "setuptools-scm"]
#build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100

[tool.pytest.ini_options]
addopts = "--cov=openoligo --cov-config=pyproject.toml --cov-report=term-missing --cov-fail-under=70"

[tool.ruff]
line-length = 130
src = ["openoligo"]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  #"D",   # pydocstyle
  "I",   # isort
  "N",   # pep8-naming
]
exclude = [".venv", "tests", "examples", "docs"]
fixable = ["ALL"]

#[tool.ruff.pydocstyle]
#convention = "google"

[tool.coverage.run]
source = ["openoligo"]

[tool.poetry.extras]
rpi = ["RPi.GPIO"]
bb = ["Adafruit_BBIO"]
